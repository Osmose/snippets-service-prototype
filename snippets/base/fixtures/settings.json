[
    {
        "model": "base.snippetsettings",
        "pk": 1,
        "fields": {
            "global_css": "<style type=\"text/css\">\r\n#snippetContainer div.snippet { display: none; }\r\n#snippetContainer div.snippet img.icon { margin: -0.75em 1em 0 0; float: left; }\r\n</style>",
            "global_js": "<script type=\"text/javascript\">\r\n//<![CDATA[\r\n(function() {\r\n\r\n    var SAMPLE_RATE = 0.1;\r\n    var STATS_URL = 'https://snippets-stats.mozilla.org/foo.html';\r\n\r\n    var snippets = (document.getElementById('snippetContainer')\r\n                    .getElementsByClassName('snippet'));\r\n    if (snippets.length > 0) {\r\n        var show_snippet = snippets[Math.floor(Math.random() * snippets.length)];\r\n        show_snippet.style.display = 'block';\r\n\r\n        try {\r\n            activateSnippetsButtonClick(show_snippet);\r\n        } catch (err) {\r\n            // Do nothing, most likely a newer version of Firefox w/o\r\n            // activateSnippetsButtonClick\r\n        }\r\n\r\n        // Send impression to the snippets stats server.\r\n        var show_snippet_id = show_snippet.parentNode.dataset.snippetId;\r\n        send_impression(show_snippet_id);\r\n\r\n        // Trigger show_snippet event on snippet node.\r\n        var evt = document.createEvent('Event');\r\n        evt.initEvent('show_snippet', true, true);\r\n        show_snippet.dispatchEvent(evt);\r\n\r\n        // Add sample rate and snippet ID to currently displayed links.\r\n        var parameters = ('sample_rate=' + SAMPLE_RATE + '&snippet_name=' +\r\n                          show_snippet_id);\r\n        modifyLinks(show_snippet.getElementsByTagName('a'), parameters);\r\n    } else {\r\n        localStorage['snippets'] = '';\r\n        showSnippets();\r\n    }\r\n\r\n    // Notifies stats server that the given snippet ID\r\n    // was shown. No personally-identifiable information\r\n    // is sent.\r\n    function send_impression(id) {\r\n        if (Math.random() <= SAMPLE_RATE) {\r\n            var r = new XMLHttpRequest();\r\n            r.open('GET', STATS_URL + '?snippet_name=' + id);\r\n            r.send();\r\n        }\r\n    }\r\n\r\n    // Modifies the given links to include the specified GET parameters.\r\n    function modifyLinks(links, parameters) {\r\n        for (var k = 0, len = links.length; k < len; k++) {\r\n            var link = links[k];\r\n            var delimeter = (link.href.indexOf('?') !== -1 ? '&' : '?');\r\n\r\n            // Pull the fragment off of the link\r\n            var fragment_position = link.href.indexOf('#');\r\n            if (fragment_position === -1) fragment_position = link.href.length;\r\n\r\n            var href = link.href.substring(0, fragment_position);\r\n            var fragment = link.href.substring(fragment_position);\r\n\r\n            link.href = href + delimeter + parameters + fragment;\r\n        }\r\n    }\r\n\r\n})();\r\n//]]>\r\n</script>"
        }
    }
]
